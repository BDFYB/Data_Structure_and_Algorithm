* Given a binary tree, return the zigzag level order traversal of its nodes' values. 
* (ie, from left to right, then right to left for the next level and alternate between).
* 
* For example:
* Given binary tree {3,9,20,#,#,15,7},
* 
*     3
*    / \
*   9  20
*     /  \
*    15   7
* 
* return its zigzag level order traversal as:
* 
* [
*   [3],
*   [20,9],
*   [15,7]
* ]
* 
* confused what "{1,#,2,3}" means? > read more on how binary tree is serialized on OJ.
* 
* OJ's Binary Tree Serialization:
* 
* The serialization of a binary tree follows a level order traversal, 
* where '#' signifies a path terminator where no node exists below.
* 
* Here's an example:
* 
*    1
*   / \
*  2   3
*     /
*    4
*     \
*      5
* 
* The above binary tree is serialized as "{1,2,3,#,#,4,#,#,5}". 
查找二叉树基本操作实现
构造了一个完全二叉树：
        6
     /     \
    4       8
   / \     / \ 
  2   5   7   9
 / \
1   3
蛇形遍历：
6 8 4 2 5 7 9 3 1
方法一思路：
按照层序遍历方法三一样，只不过在放入数据的时候增加一个标志位（用level也可），当level为偶数则顺序放，当level为奇数则往队列前面放。
